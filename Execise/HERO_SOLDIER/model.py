# В  некой игре-стратегии есть солдаты и герои. У всех есть свойство, содержащее уникальный номер объекта, и свойство, в котором хранится принадлежность команде. У 
# солдат есть метод "иду за героем", который в качестве аргумента принимает объект типа "герой". У героев есть метод увеличения собственного уровня. 
# В основной ветке программы создается по одному герою для каждой команды. В цикле генерируются объекты-солдаты. Их принадлежность команде определяется 
# случайно. Солдаты разных команд добавляются в разные списки. Измеряется длина списков 
# солдат противоборствующих команд и выводится на экран. У героя, принадлежащего команде с более длинным списком, увеличивается уровень. 
# Отправляем одного из солдат следовать за первым героем и выводим их идентификационные номера.
from consts import COMMANDS_NAMES
from random import randint

__all__ = {'Person', 'Heroes', 'Soldier'}

class Game:
    TOTAL = 1

    def __init__(self, stim):
        self.id = Game.TOTAL
        self.stim = stim
        Game.TOTAL +=1


class Hero(Game):

    def __init__(self, stim, level = 1):
        super().__init__(stim)
        self.level = level

    def level_up(self, res):
        self.level += res

    def __str__(self):
        return f'{self.level} , {self.stim}'
    


class Soldier(Game):
    
    def go_to_hero(self, hero):
        return f'Следую за героем {randint(1, self.id)} команды {hero.stim}'



